rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // Student data - only authenticated users can access their own data
    match /students/{studentId} {
      allow read: if isOwner(studentId);
      allow write: if isOwner(studentId);
    }
    
    // Lessons - authenticated users can read, admins can write
    match /lessons/{lessonId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Problem sets - authenticated users can read
    match /problemSets/{problemSetId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // User progress - users can only access their own progress
    match /progress/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

